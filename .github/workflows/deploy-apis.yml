name: Deploy APIs

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  api-discovery:
    runs-on: ubuntu-latest
    outputs:
      api_folders: ${{ steps.api_discovery.outputs.api_folders }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Discover API folders
      id: api_discovery
      run: |
        if [ -d "./apis" ]; then
          api_folders=$(find ./apis -maxdepth 1 -mindepth 1 -type d | sed 's|./apis/||' | jq -R -s -c 'split("\n")[:-1]')
        else
          api_folders="[]"
        fi
        echo "api_folders=$api_folders" >> $GITHUB_ENV
        echo "::set-output name=api_folders::$api_folders"
        echo "Debug: $api_folders"
      shell: bash

  build-and-deploy:
    needs: api-discovery
    runs-on: ubuntu-latest

    strategy:
      matrix:
        api_folder: ${{ fromJson(needs.api-discovery.outputs.api_folders) }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Assume AWS Role
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.API_DEPLOY_ROLE_ARN }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Log in to Amazon ECR
      run: |
        aws ecr get-login-password --region ${{ vars.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com

    - name: Build and push Docker image
      run: |
        docker buildx build --platform linux/arm64 -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/${{ matrix.api_folder }}:${{ github.sha }} ./apis/${{ matrix.api_folder }} --push

    - name: Install Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Initialize Terraform
      run: terraform init

    - name: Validate Terraform
      run: terraform validate

    - name: Plan Terraform
      id: terraform_plan
      run: terraform plan -out tfplan -var="aws_region=${{ vars.AWS_REGION }}" -var="api_name=${{ matrix.api_folder }}" -var="image_tag=${{ github.sha }}"

    - name: Apply Terraform
      if: github.event_name == 'push'
      run: terraform apply -auto-approve tfplan

    - name: Post Terraform Plan to PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = require('fs').readFileSync('tfplan', 'utf8');
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '### Terraform Plan Output\n```\n' + output + '\n```'
          });
